# Copyright 2019 Oliver Smith
# SPDX-License-Identifier: AGPL-3.0-or-later

import collections
import os
import tarfile


def get_pkginfo_lines(apk):
    if not os.path.exists(apk):
        raise RuntimeError("File does not exist: " + apk)

    if not tarfile.is_tarfile(apk):
        raise RuntimeError("This apk is not a valid tar archive: " + apk)

    with tarfile.open(apk, "r:gz") as tar:
        with tar.extractfile(".PKGINFO") as handle:
            return handle.readlines()


def get_abuild_version(lines):
    """ Get the abuild version from the .PKGINFO file inside an apk generated
        by abuild. In contrary to all other key=value pairs in the file, this
        is just stored as comment on top. We need it to figure out if the apk
        was built with a broken version of abuild, that generated broken
        packages (#56).

        :param lines: list of \n-terminated lines as bytes from .PKGINFO file,
                      as returned by get_pkginfo_lines()
        :returns: version string like "3.4.0-r1" or None"""
    if not len(lines):
        return None
    line = lines[0].decode()

    prefix = "# Generated by abuild "
    if not line.startswith(prefix):
        return None

    prefix_len = len(prefix)
    return line[prefix_len:-1]


def get_metadata(apk):
    """ :param apk: path to apk file
        :returns: ordered dict with relevant metadata from .PKGINFO:
                  {"abuild_version": "3.5.0_rc1-r1",
                   "pkgver": "1-r3",
                   "origin": "hello-world-wrapper"}
        NOTE: as shown in the example, pkgver is actually the full version
              ($pkgver-r$pkgrel)!
        NOTE: entries appear in the same order, as they appear in the .PKGINFO.
    """
    relevant_keys = ["origin", "pkgver"]

    ret = collections.OrderedDict()
    lines = get_pkginfo_lines(apk)
    ret["abuild_version"] = get_abuild_version(lines)

    for line in lines:
        line = line.decode()
        for key in relevant_keys:
            if not line.startswith(key + " = "):
                continue
            if key in ret:
                raise RuntimeError("key " + key + " found twice in .PKGINFO"
                                   " of apk file: " + apk)
            value = line[len(key + " = "):-1]
            ret[key] = value
    return ret
